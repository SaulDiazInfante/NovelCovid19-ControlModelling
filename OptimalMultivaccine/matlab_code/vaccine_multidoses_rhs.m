function du = vaccine_multidoses_rhs(t, u, pars)
% vaccine-multidoses right hand side function
    s = u(1);
    e = u(2);
    i_s = u(3);
    i_a = u(4);
    h = u(5);
    r = u(6);
    d = u(7);
    % First dose vaccine type A
    x_s =  u(8);
    x_e = u(9);
    x_i_a = u(10);
    x_r= u(11);
    % Second dose vaccine type B
    y_s =  u(12);
    y_e = u(13);
    y_i_a = u(14);
    y_r= u(15);
    %
    n_aster = (1.0 - d);
    n_aster_aster = n_aster - h;
    lambda_f_s = pars.beta_s * i_s;
    lambda_f_a = pars.beta_a * (i_a + x_i_a + y_i_a);
    lambda_f =  (lambda_f_s + lambda_f_a) / n_aster_aster;
    %
    indicator_tau_1 = 0.0;
    if t >= 21.0
        indicator_tau_1 = 1.0;
    end
    du_s = pars.mu  * n_aster + ...
        pars.delta_r * r + ...
        pars.delta_r * y_r - ...
            (lambda_f + pars.lambda_v_1_a + pars.mu) * s;
    du_e = lambda_f * s - ...
        (pars.delta_e + pars.lambda_v_1_a + pars.mu) * e;
    du_i_s = pars.p * ...
        (pars.delta_e * e + ...
            pars.delta_e_hat * x_e +  pars.delta_e_tilde * y_e) - ...
        (pars.delta_h + pars.alpha_s + pars.mu_i_s + pars.mu) * i_s;
    du_i_a = (1.0 - pars.p) * pars.delta_e * e - ...
        (pars.alpha_a + pars.lambda_v_1_a + pars.mu) * i_a;
    du_h = pars.delta_h * i_s - ...
        (pars.alpha_h + pars.mu_h + pars.mu) * h;
    du_r = pars.alpha_s * i_s + ...
        pars.alpha_a * i_a  + pars.alpha_h * h - ...
        (pars.lambda_v_1_a + pars.delta_r + pars.mu) * r;
    du_d = pars.mu_i_s * i_s + pars.mu_h * h;
    % First dose dynamics
    % TODO: implement switch for second dose
    du_x_s = pars.lambda_v_1_a * s - ...
        ((1.0 - pars.epsilon) * lambda_f + ...
            indicator_tau_1 * pars.lambda_v_2_a + ...
            pars.mu) * x_s;
    du_x_e = pars.lambda_v_1_a * e + ...
        (1 - pars.epsilon) * lambda_f * x_s - ...
        (indicator_tau_1 * pars.lambda_v_2_a  + ... 
            pars.delta_e_hat + pars.mu) * x_e;
    du_x_i_a = pars.lambda_v_1_a * i_a + ...
        (1.0 - pars.p) * pars.delta_e_hat * x_e - ...
        (indicator_tau_1 * pars.lambda_v_2_a  + ... 
            pars.alpha_a_hat + pars.mu) * x_i_a;
    du_x_r = pars.lambda_v_1_a * r + pars.alpha_a_hat * x_i_a - ...
        (indicator_tau_1 * pars.lambda_v_2_a  + pars.mu) * x_r;
    % Secon dose dynamics
    du_y_s = indicator_tau_1 * pars.lambda_v_2_a  * x_s - ...
        ((1.0 - pars.epsilon_tilde) * lambda_f + pars.mu) * y_s;
    du_y_e = indicator_tau_1 * pars.lambda_v_2_a  * x_e + ...
        (1 - pars.epsilon_tilde) * lambda_f * y_s - ...
        (pars.delta_e_tilde + pars.mu) * y_e;
    du_y_i_a = indicator_tau_1 * pars.lambda_v_2_a  * x_i_a + ...
        (1.0 - pars.p) * pars.delta_e_tilde * y_e - ...
        (pars.alpha_a_tilde + pars.mu) * y_i_a;
    du_y_r = indicator_tau_1 * pars.lambda_v_2_a  * x_r + ...
            pars.alpha_a_tilde * y_i_a - ...
            (pars.delta_r + pars.mu) * y_r;
    %
    du_x_vac_1_a = pars.lambda_v_1_a * (s + e + i_a + r);
    du_x_vac_2_a = indicator_tau_1 * pars.lambda_v_2_a  * ... 
            (x_s + x_e + x_i_a + x_r);
    %
    du = [du_s; du_e; du_i_s; du_i_a; ...
            du_h; du_r;  du_d; ...
            du_x_s; du_x_e; du_x_i_a; du_x_r; ...
            du_y_s; du_y_e; du_y_i_a; du_y_r; ...
            du_x_vac_1_a; du_x_vac_2_a ];
   